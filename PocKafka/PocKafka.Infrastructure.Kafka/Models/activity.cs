// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace PocKafka.Infrastructure.Kafka.Models
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	public partial class activity : ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse(@"{""type"":""record"",""name"":""activity"",""namespace"":""PocKafka.Infrastructure.Kafka.Models"",""fields"":[{""name"":""type"",""doc"":""The reported device motion activity (still, walking, on_foot, running, on_bicycle, in_vehicle)."",""type"":""string""},{""name"":""confidence"",""doc"":""Confidence of the reported device motion activity in %."",""type"":""float""}]}");
		/// <summary>
		/// The reported device motion activity (still, walking, on_foot, running, on_bicycle, in_vehicle).
		/// </summary>
		private string _type;
		/// <summary>
		/// Confidence of the reported device motion activity in %.
		/// </summary>
		private float _confidence;
		public virtual Schema Schema
		{
			get
			{
				return activity._SCHEMA;
			}
		}
		/// <summary>
		/// The reported device motion activity (still, walking, on_foot, running, on_bicycle, in_vehicle).
		/// </summary>
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				this._type = value;
			}
		}
		/// <summary>
		/// Confidence of the reported device motion activity in %.
		/// </summary>
		public float confidence
		{
			get
			{
				return this._confidence;
			}
			set
			{
				this._confidence = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.type;
			case 1: return this.confidence;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.type = (System.String)fieldValue; break;
			case 1: this.confidence = (System.Single)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
